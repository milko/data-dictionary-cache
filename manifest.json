{
    "name": "TestCacheValidation",
    "version": "0.0.0",
    "description": "Test cache and validation services.",
    "engines": {
        "arangodb": "^3.0.0"
    },
    "author": "Milko Skofic",
    "license": "Apache 2",
    "main": "main.js",
    "scripts": {
        "setup": "scripts/setup.js",
        "teardown": "scripts/teardown.js"
    },
    "configuration": {
        "language": {
            "description": "Default language ISO code.",
            "type": "string",
            "required": true,
            "default": "iso_639_3_eng"
        },
        "collectionTerm": {
            "description": "Terms collection name",
            "type": "string",
            "required": true,
            "default": "terms"
        },
        "collectionEdge": {
            "description": "Edges collection name",
            "type": "string",
            "required": true,
            "default": "edges"
        },
        "collectionLink": {
            "description": "Links collection name",
            "type": "string",
            "required": true,
            "default": "links"
        },
        "collectionTopo": {
            "description": "Topography collection name",
            "type": "string",
            "required": true,
            "default": "topos"
        },
        "viewTerm": {
            "description": "Term view name",
            "type": "string",
            "required": true,
            "default": "VIEW_TERM"
        },
        "defaultNamespaceKey": {
            "description": "Default namespace actual key",
            "type": "string",
            "required": true,
            "default": ":"
        },
        "sectionCode": {
            "description": "Term codes section name key",
            "type": "string",
            "required": true,
            "default": "_code"
        },
        "sectionInfo": {
            "description": "Term information section name key",
            "type": "string",
            "required": true,
            "default": "_info"
        },
        "sectionData": {
            "description": "Term data section name key",
            "type": "string",
            "required": true,
            "default": "_data"
        },
        "sectionRule": {
            "description": "Term rules section name key",
            "type": "string",
            "required": true,
            "default": "_rule"
        },
        "sectionScalar": {
            "description": "Term scalar data definition section key",
            "type": "string",
            "required": true,
            "default": "_scalar"
        },
        "sectionArray": {
            "description": "Term array data definition section key",
            "type": "string",
            "required": true,
            "default": "_array"
        },
        "sectionSet": {
            "description": "Term set data definition section key",
            "type": "string",
            "required": true,
            "default": "_set"
        },
        "sectionDict": {
            "description": "Term dictionary data definition section key",
            "type": "string",
            "required": true,
            "default": "_dict"
        },
        "sectionPath": {
            "description": "Term edge path section key",
            "type": "string",
            "required": true,
            "default": "_path"
        },
        "predicate": {
            "description": "Predicate descriptor key",
            "type": "string",
            "required": true,
            "default": "_predicate"
        },
        "predicateEnumeration": {
            "description": "Enumeration predicate key",
            "type": "string",
            "required": true,
            "default": "_predicate_enum-of"
        },
        "localIdentifier": {
            "description": "Local identifier key",
            "type": "string",
            "required": true,
            "default": "_lid"
        },
        "officialIdentifiers": {
            "description": "List of official identifiers key",
            "type": "string",
            "required": true,
            "default": "_aid"
        },
        "providerIdentifiers": {
            "description": "List of provider identifiers key",
            "type": "string",
            "required": true,
            "default": "_pid"
        },
        "scalarType": {
            "description": "Scalar data type descriptor key",
            "type": "string",
            "required": true,
            "default": "_type"
        },
        "typeBoolean": {
            "description": "Boolean data type key",
            "type": "string",
            "required": true,
            "default": "_type_boolean"
        },
        "typeInteger": {
            "description": "Integer data type key",
            "type": "string",
            "required": true,
            "default": "_type_integer"
        },
        "typeNumber": {
            "description": "Number data type key",
            "type": "string",
            "required": true,
            "default": "_type_number"
        },
        "typeTypestamp": {
            "description": "Timestamp data type key",
            "type": "string",
            "required": true,
            "default": "_type_number_timestamp"
        },
        "typeString": {
            "description": "String data type key",
            "type": "string",
            "required": true,
            "default": "_type_string"
        },
        "typeKey": {
            "description": "Term global identifier type key",
            "type": "string",
            "required": true,
            "default": "_type_string_key"
        },
        "typeHandle": {
            "description": "Term handle type key",
            "type": "string",
            "required": true,
            "default": "_type_string_handle"
        },
        "typeEnum": {
            "description": "Enumeration type key",
            "type": "string",
            "required": true,
            "default": "_type_string_enum"
        },
        "typeDate": {
            "description": "Date type key",
            "type": "string",
            "required": true,
            "default": "_type_string_date"
        },
        "typeStruct": {
            "description": "Structure type key",
            "type": "string",
            "required": true,
            "default": "_type_struct"
        },
        "typeObject": {
            "description": "Structure type key",
            "type": "string",
            "required": true,
            "default": "_type_object"
        },
        "typeGeoJSON": {
            "description": "GeoJSON object type key",
            "type": "string",
            "required": true,
            "default": "_type_object_geojson"
        },
        "rangeNumber": {
            "description": "Numeric valid range descriptor key",
            "type": "string",
            "required": true,
            "default": "_valid-range"
        },
        "rangeNumberMinInclusive": {
            "description": "Numeric minimum inclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_min-range-inclusive"
        },
        "rangeNumberMaxInclusive": {
            "description": "Numeric maximum inclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_max-range-inclusive"
        },
        "rangeNumberMinExclusive": {
            "description": "Numeric minimum exclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_min-range-exclusive"
        },
        "rangeNumberMaxExclusive": {
            "description": "Numeric maximum exclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_max-range-exclusive"
        },
        "rangeString": {
            "description": "String valid range descriptor key",
            "type": "string",
            "required": true,
            "default": "_valid-range_string"
        },
        "rangeStringMinInclusive": {
            "description": "String minimum inclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_min-range-inclusive_string"
        },
        "rangeStringMaxInclusive": {
            "description": "String maximum inclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_max-range-inclusive_string"
        },
        "rangeStringMinExclusive": {
            "description": "String minimum exclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_min-range-exclusive_string"
        },
        "rangeStringMaxExclusive": {
            "description": "String maximum exclusive range descriptor key",
            "type": "string",
            "required": true,
            "default": "_max-range-exclusive_string"
        },
        "regularExpression": {
            "description": "Regular expression descriptor key",
            "type": "string",
            "required": true,
            "default": "_regexp"
        },
        "dataKind": {
            "description": "Data kind descriptor key",
            "type": "string",
            "required": true,
            "default": "_kind"
        },
        "anyTerm": {
            "description": "Any term wildcard key",
            "type": "string",
            "required": true,
            "default": "_any-term"
        },
        "anyEnum": {
            "description": "Any enumeration element term wildcard key",
            "type": "string",
            "required": true,
            "default": "_any-enum"
        },
        "anyDescriptor": {
            "description": "Any descriptor term wildcard key",
            "type": "string",
            "required": true,
            "default": "_any-descriptor"
        },
        "anyObject": {
            "description": "Any object definition term wildcard key",
            "type": "string",
            "required": true,
            "default": "_any-object"
        }
    },
    "tests": "test/**/*.js"
}